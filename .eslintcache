[{"/Users/vereojeda/Projects/CODIUM/challenges/blog-app/src/index.js":"1","/Users/vereojeda/Projects/CODIUM/challenges/blog-app/src/App.js":"2","/Users/vereojeda/Projects/CODIUM/challenges/blog-app/src/reportWebVitals.js":"3","/Users/vereojeda/Projects/CODIUM/challenges/blog-app/src/components/RemotePostList.js":"4","/Users/vereojeda/Projects/CODIUM/challenges/blog-app/src/components/LocalPostList.js":"5","/Users/vereojeda/Projects/CODIUM/challenges/blog-app/src/config.js":"6","/Users/vereojeda/Projects/CODIUM/challenges/blog-app/src/components/LocalPostForm.js":"7"},{"size":501,"mtime":1608658366817,"results":"8","hashOfConfig":"9"},{"size":2173,"mtime":1608668227979,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1608602278611,"results":"11","hashOfConfig":"9"},{"size":2959,"mtime":1608728352354,"results":"12","hashOfConfig":"9"},{"size":3710,"mtime":1608672269013,"results":"13","hashOfConfig":"9"},{"size":90,"mtime":1608607935572,"results":"14","hashOfConfig":"9"},{"size":4530,"mtime":1608729820206,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1vp5d1o",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vereojeda/Projects/CODIUM/challenges/blog-app/src/index.js",["34"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["35","36","37","38","39","40"],"/Users/vereojeda/Projects/CODIUM/challenges/blog-app/src/App.js",["41"],"/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Layout, Menu } from 'antd';\nimport styled from 'styled-components';\nimport {\n  BrowserRouter as Router, Switch, Route, Link,\n} from 'react-router-dom';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport './App.css';\nimport RemotePostList from './components/RemotePostList';\nimport LocalPostList from './components/LocalPostList';\n\nconst { Header, Content, Footer } = Layout;\n\nconst ResponsiveContainer = styled.div`\n  padding: 50px;\n  @media (max-width: 767.98px) {\n    padding-left: 0px;\n    padding-right: 0px;\n  }\n  max-width: 1900px;\n  margin: auto;\n`;\n\nconst styles = {\n  header: {\n    background: '#ffffff',\n  },\n  content: {\n    padding: '0 50px',\n  },\n  footer: {\n    textAlign: 'center',\n  },\n};\n\nfunction App() {\n  const getSelectedMenu = () => {\n    switch (window.location.pathname) {\n      case '/remote-posts':\n        return '1';\n      case '/local-posts':\n        return '2';\n      default:\n        return '1';\n    }\n  };\n\n  return (\n    <Router>\n      <Layout>\n        <Header style={styles.header}>\n          <Menu\n            theme=\"light\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={getSelectedMenu()}\n          >\n            <Menu.Item key=\"1\">\n              <Link to=\"remote-posts\">Global</Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Link to=\"local-posts\">Local</Link>\n            </Menu.Item>\n          </Menu>\n        </Header>\n        <Content>\n          <ResponsiveContainer>\n            <br />\n            <div className=\"site-layout-content\">\n              <Switch>\n                <Route path=\"/remote-posts\">\n                  <RemotePostList />\n                </Route>\n                <Route path=\"/local-posts\">\n                  <LocalPostList />\n                </Route>\n                <Route path=\"/\">\n                  <RemotePostList />\n                </Route>\n              </Switch>\n            </div>\n          </ResponsiveContainer>\n        </Content>\n        <Footer style={styles.footer}>Code challenge - December, 2020</Footer>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/vereojeda/Projects/CODIUM/challenges/blog-app/src/reportWebVitals.js",[],"/Users/vereojeda/Projects/CODIUM/challenges/blog-app/src/components/RemotePostList.js",["42","43","44"],"/Users/vereojeda/Projects/CODIUM/challenges/blog-app/src/components/LocalPostList.js",["45","46"],"import React, { useEffect, useState } from 'react';\nimport {\n  List, Spin, Space, Typography, Button, Tag, message, Row, Col,\n} from 'antd';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport LocalPostForm from './LocalPostForm';\nimport './Posts.css';\n\nconst { Title } = Typography;\n\nconst styles = {\n  subheader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  postBody: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  postBodyFooter: {\n    paddingTop: 10,\n  },\n};\n\n// eslint-disable-next-line react/prop-types\nconst IconText = ({ icon, text }) => (\n  <Space>\n    {React.createElement(icon)}\n    {text}\n  </Space>\n);\n\nfunction RemotePostList() {\n  const [posts, setPosts] = useState([]);\n  const [selectedPost, setSelectedPost] = useState();\n  const [loading, setLoading] = useState();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const getPosts = async () => {\n    const rsp = localStorage.getItem('posts');\n    const postsList = JSON.parse(rsp) || {};\n    setPosts(postsList.data ? postsList.data.articles : []);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  const editPost = (post) => {\n    setSelectedPost(post);\n    setIsModalVisible(true);\n  };\n\n  const deletePost = (post) => {\n    const rsp = localStorage.getItem('posts');\n    const oldList = JSON.parse(rsp) || {};\n    const newData = oldList.data.articles.filter((p) => p.title !== post.title);\n    const newList = {\n      data: {\n        articles: newData,\n        totalResults: newData.length,\n      },\n    };\n    localStorage.setItem('posts', JSON.stringify(newList));\n    message.success('Post deleted');\n    getPosts();\n  };\n\n  return (\n    <div className=\"infinite-container\">\n      <Row justify=\"space-between\">\n        <Col>\n          <Title level={3}>Local people talking about watches</Title>\n        </Col>\n        <Col>\n          <Button type=\"primary\" onClick={() => setIsModalVisible(true)}>Create new post!</Button>\n        </Col>\n      </Row>\n      <List\n        itemLayout=\"vertical\"\n        size=\"large\"\n        dataSource={posts}\n        renderItem={(item, index) => (\n          <List.Item\n            key={index}\n            actions={[\n              <Button type=\"link\" onClick={() => editPost(item)}>\n                <IconText icon={EditOutlined} text=\"Edit\" key=\"list-vertical-star-o\" />\n              </Button>,\n              <Button type=\"link\" onClick={() => deletePost(item)}>\n                <IconText icon={DeleteOutlined} text=\"Delete\" key=\"list-vertical-like-o\" />\n              </Button>,\n            ]}\n            extra={(\n              <img\n                alt=\"logo\"\n                src={item.urlToImage}\n                style={{ maxWidth: 272, width: '100%' }}\n              />\n            )}\n          >\n            <List.Item.Meta\n              title={<div><a href={item.url}>{item.title}</a></div>}\n              description={item.description}\n            />\n            <div style={styles.postBody}>\n              <div dangerouslySetInnerHTML={{ __html: item.content }} />\n              <div style={styles.postBodyFooter}>\n                {item.author && item.author.split(',').map((a) => <Tag key={a} color=\"purple\">{a}</Tag>)}\n              </div>\n            </div>\n          </List.Item>\n        )}\n      >\n        <br />\n        {loading && (\n          <div className=\"loading-container\">\n            <Spin />\n          </div>\n        )}\n      </List>\n      <LocalPostForm\n        visible={isModalVisible}\n        setVisible={setIsModalVisible}\n        post={selectedPost}\n        setPost={setSelectedPost}\n        refreshPosts={getPosts}\n      />\n    </div>\n  );\n}\n\nexport default RemotePostList;\n","/Users/vereojeda/Projects/CODIUM/challenges/blog-app/src/config.js",[],"/Users/vereojeda/Projects/CODIUM/challenges/blog-app/src/components/LocalPostForm.js",["47","48","49"],{"ruleId":"50","severity":1,"message":"51","line":8,"column":3,"nodeType":"52","endLine":10,"endColumn":22},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"50","severity":1,"message":"51","line":50,"column":5,"nodeType":"52","endLine":86,"endColumn":14},{"ruleId":"50","severity":1,"message":"51","line":58,"column":5,"nodeType":"52","endLine":104,"endColumn":11},{"ruleId":"65","severity":1,"message":"66","line":85,"column":35,"nodeType":"67","endLine":85,"endColumn":89},{"ruleId":"65","severity":1,"message":"66","line":88,"column":22,"nodeType":"67","endLine":88,"endColumn":72},{"ruleId":"50","severity":1,"message":"51","line":27,"column":3,"nodeType":"52","endLine":30,"endColumn":11},{"ruleId":"65","severity":1,"message":"66","line":108,"column":20,"nodeType":"67","endLine":108,"endColumn":70},{"ruleId":"68","severity":1,"message":"69","line":75,"column":5,"nodeType":"70","messageId":"71","endLine":75,"endColumn":16},{"ruleId":"68","severity":1,"message":"69","line":87,"column":5,"nodeType":"70","messageId":"71","endLine":87,"endColumn":16},{"ruleId":"50","severity":1,"message":"51","line":91,"column":5,"nodeType":"52","endLine":181,"endColumn":13},"react/jsx-filename-extension","JSX not allowed in files with extension '.js'","JSXElement","lines-around-directive",["72"],"no-spaced-func",["73"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react/no-danger","Dangerous property 'dangerouslySetInnerHTML' found","JSXAttribute","no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements","func-call-spacing"]